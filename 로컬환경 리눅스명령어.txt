### 1단계: 초기 설정 및 디렉토리 구조 확인

```bash
pwd  # 현재 디렉토리 출력
cd /  # 루트 디렉토리로 이동
pwd  # 다시 현재 디렉토리 출력
ls -al  # 숨겨진 파일 포함, 상세 파일 목록 출력
mkdir engn  # 'engn' 디렉토리 생성
ls -al  # 파일 목록 다시 확인
mkdir log data  # 'log'와 'data' 디렉토리 생성
ls -al  # 생성된 디렉토리 확인
cd /engn  # 'engn' 디렉토리로 이동
ls -al  # 'engn' 내 파일 목록 확인
```

### 2단계: JDK 설치 및 설정

```bash
tar -zxvf openjdk-11.0.0.2_linux-x64.tar.gz  # OpenJDK 압축 해제
cd jdk-11.0.0.2/  # 압축 해제된 JDK 디렉토리로 이동
ls -al  # JDK 디렉토리 내 파일 목록 확인
cd bin  # 'bin' 디렉토리로 이동
./java -version  # Java 버전 확인
ls -al  # bin 디렉토리 파일 목록 확인
```

### 3단계: Confluent 설정

```bash
ln -s /engn/confluent-7.7.1 confluent  # 심볼릭 링크 생성
ls -al  # 심볼릭 링크 확인
cd confluent  # 'confluent' 디렉토리로 이동
ls -al  # 파일 목록 확인
mv ../config.tar .  # 'config.tar' 파일을 현재 디렉토리로 이동
ls -al  # 파일 목록 확인
tar -xvf config.tar  # config.tar 파일 압축 해제
ls -al  # 압축 해제 후 파일 목록 확인
chown -R root:root *  # 소유자를 root로 변경
ls -al  # 파일 목록 다시 확인
rm -rf config.tar  # config.tar 파일 삭제
ls -al  # 파일 목록 확인
```

### 4단계: Kafka 설정 파일 수정

```bash
cd properties/  # 'properties' 디렉토리로 이동
ls -al  # 파일 목록 확인
vi broker.properties  # 'broker.properties' 파일 수정
cd ..  # 상위 디렉토리로 이동
ll  # 파일 목록 출력 (ls -al과 동일)
```

### 5단계: 스크립트 및 로그 설정

```bash
cd logs  # 'logs' 디렉토리로 이동
cd scripts/  # 'scripts' 디렉토리로 이동
ls -al  # 파일 목록 확인
vi start-broker.sh  # 'start-broker.sh' 스크립트 파일 수정
cd ..  # 상위 디렉토리로 이동
cd log4j  # 'log4j' 디렉토리로 이동
ls -al  # 파일 목록 확인
rm controller-log4j.properties  # 'controller-log4j.properties' 파일 삭제
cp broker-log4j.properties controller-log4j.properties  # 'broker-log4j.properties' 복사
ls -al  # 파일 목록 확인
```

### 6단계: Kafka 스토리지 설정

```bash
cd bin  # 'bin' 디렉토리로 이동
./kafka-storage random-uuid  # Kafka 스토리지용 UUID 생성
./kafka-storage format -t q9XxS5D-QDKMPYaiHjT0Ew -c /engn/confluent/properties/controller.properties  # Kafka 스토리지 포맷 (controller 설정 파일 사용)
./kafka-storage format -t q9XxS5D-QDKMPYaiHjT0Ew -c /engn/confluent/properties/broker.properties  # Kafka 스토리지 포맷 (broker 설정 파일 사용)
```

### 7단계: 프로세스 및 로그 확인

```bash
cd /log  # '/log' 디렉토리로 이동
ps -ef|grep java  # 실행 중인 Java 프로세스 확인
```

### 8단계: Kafka 토픽 관리

```bash
cd /engn/confluent/scripts/  # 'scripts' 디렉토리로 이동
./start-broker.sh  # 브로커 시작 스크립트 실행
ps -ef |grep java  # 실행 중인 Java 프로세스 확인
cd bin  # 'bin' 디렉토리로 이동
./kafka-topics --bootstrap-server localhost:9092 --describe  # Kafka 토픽 설명 확인
./kafka-topics --bootstrap-server localhost:9092 --list  # Kafka 토픽 목록 확인
```

### 9단계: Kafka 토픽 생성

```bash
./kafka-topics --bootstrap-server localhost:9092 --create --topic basic_topic --partitions 3  # 'basic_topic' 토픽 생성
```

### 10단계: Control Center 실행

```bash
cd /engn/confluent/scripts/  # 'scripts' 디렉토리로 이동
./start-control-center.sh  # Control Center 시작 스크립트 실행
vi start-control-center.sh  # 'start-control-center.sh' 파일 수정
ps -ef |grep java  # 실행 중인 Java 프로세스 확인
```

### 11단계: Kafka Console Producer 실행

```bash
cd bin  # 'bin' 디렉토리로 이동
./kafka-console-producer --broker-list localhost:9092 --topic basic_topic  # Kafka console producer 실행하여 'basic_topic'에 메시지 전송
```